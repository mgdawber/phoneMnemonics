{"version":3,"sources":["retrieveMnemonics.js","App.js","utilities.js","reportWebVitals.js","index.js"],"names":["phoneMap","Map","results","backtrack","combo","phoneNumber","length","push","get","forEach","letter","slice","retrieveMnemonics","App","useState","setPhoneNumber","replaceAll","sanitize","Button","number","letters","onClick","digit","alert","className","aria-hidden","map","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAMA,EAAW,IAAIC,IAAI,CACvB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,IAAK,MACtB,CAAC,IAAK,CAAC,IAAK,IAAK,MACjB,CAAC,IAAK,CAAC,IAAK,IAAK,IAAK,QAGpBC,EAAU,GAERC,EAAY,SAAZA,EAAaC,EAAOC,GACxB,GAA2B,IAAvBA,EAAYC,OAAgB,OAAOJ,EAAQK,KAAKH,GAEpDJ,EAASQ,IAAIH,EAAY,IAAII,SAAQ,SAAAC,GACnCP,EAAU,GAAD,OAAIC,GAAJ,OAAYM,GAAUL,EAAYM,MAAM,QAIxCC,EAAoB,SAACP,GAGhC,OAFAH,EAAU,GAELG,EAEsB,IAAvBA,EAAYC,OACPN,EAASQ,IAAIH,EAAY,KAGlCF,EAAU,GAAIE,GAEPH,GARoB,I,eC4BdW,MA/Cf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNT,EADM,KACOU,EADP,KAEPb,EAAUU,ECPM,SAACP,GAAD,OACtBA,EAAYW,WAAW,IAAK,IAAIA,WAAW,IAAK,IDMdC,CAASZ,IAUrCa,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACb,yBAAQC,QAAS,kBATH,SAACC,GACf,GAAIjB,EAAYC,OAAS,EACvB,OAAOiB,MAAM,+BAGfR,EAAeV,EAAciB,GAIND,CAAQF,IAA/B,UACE,8BAAMA,IACN,8BAAMC,QAIV,OACE,sBAAKI,UAAU,MAAf,UACE,6BAAKnB,IAEL,sBAAKmB,UAAU,SAAf,UACE,cAACN,EAAD,CAAQC,OAAO,MACf,cAACD,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,YAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,UAC3B,cAACF,EAAD,CAAQC,OAAO,IAAIC,QAAQ,YAE3B,wBAAQC,QAAS,kBAAMN,EAAe,KAAtC,mBACA,cAACG,EAAD,CAAQC,OAAO,MACf,wBAAQM,eAAA,OAGV,sBAAKD,UAAU,UAAf,UACE,2CAAa,4BAAItB,EAAQI,SAAzB,6BACA,6BAAKJ,EAAQwB,KAAI,SAAAC,GAAM,OAAI,6BAAkBA,GAATA,eElC7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4d7f8b16.chunk.js","sourcesContent":["const phoneMap = new Map([\n  ['2', ['a', 'b', 'c']],\n  ['3', ['d', 'e', 'f']],\n  ['4', ['g', 'h', 'i']],\n  ['5', ['j', 'k', 'l']],\n  ['6', ['m', 'n', 'o']],\n  ['7', ['p', 'q', 'r', 's']],\n  ['8', ['t', 'u', 'v']],\n  ['9', ['w', 'x', 'y', 'z']]\n])\n\nlet results = []\n\nconst backtrack = (combo, phoneNumber) => {\n  if (phoneNumber.length === 0) { return results.push(combo) }\n\n  phoneMap.get(phoneNumber[0]).forEach(letter => {\n    backtrack(`${combo}${letter}`, phoneNumber.slice(1))\n  })\n}\n\nexport const retrieveMnemonics = (phoneNumber) => {\n  results = []\n\n  if (!phoneNumber) { return [] }\n\n  if (phoneNumber.length === 1) {\n    return phoneMap.get(phoneNumber[0])\n  }\n\n  backtrack(\"\", phoneNumber)\n\n  return results\n}\n","import { useState } from 'react'\nimport { retrieveMnemonics } from './retrieveMnemonics.js'\nimport { sanitize } from './utilities.js'\nimport './App.css'\n\nfunction App() {\n  const [phoneNumber, setPhoneNumber] = useState(\"\")\n  const results = retrieveMnemonics(sanitize(phoneNumber))\n\n  const onClick = (digit) => {\n    if (phoneNumber.length > 5) {\n      return alert('Maximum input of 6 reached.')\n    }\n\n    setPhoneNumber(phoneNumber + digit)\n  }\n\n  const Button = ({ number, letters }) => (\n    <button onClick={() => onClick(number)}>\n      <div>{number}</div>\n      <div>{letters}</div>\n    </button>\n  )\n\n  return (\n    <div className=\"app\">\n      <h1>{phoneNumber}</h1>\n\n      <div className=\"digits\">\n        <Button number=\"1\" />\n        <Button number=\"2\" letters=\"a b c\"/>\n        <Button number=\"3\" letters=\"d e f\"/>\n        <Button number=\"4\" letters=\"g h i\"/>\n        <Button number=\"5\" letters=\"j k l\"/>\n        <Button number=\"6\" letters=\"m n o\"/>\n        <Button number=\"7\" letters=\"p q r s\"/>\n        <Button number=\"8\" letters=\"t u v\"/>\n        <Button number=\"9\" letters=\"w x y z\"/>\n\n        <button onClick={() => setPhoneNumber(\"\")}>Clear</button>\n        <Button number=\"0\" />\n        <button aria-hidden />\n      </div>\n\n      <div className=\"results\">\n        <p>There are <b>{results.length}</b> possible combinations.</p>\n        <ul>{results.map(result => <li key={result}>{result}</li>)}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","export const sanitize = (phoneNumber) => (\n  phoneNumber.replaceAll('0', '').replaceAll('1', '')\n)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}